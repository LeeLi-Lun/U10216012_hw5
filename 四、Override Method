import java.awt.event.*;
import javax.swing.JFame;
import javax.swing.border.TitleBorder;

public class TestCalculate extends JFrame {
	
	private JButton jbtDecimal= new JButton(".");
	private JButton jbtAnswer = new JButton("=");
	
	private JButton jbtAdd = new JButton("+");
	private JButton jbtMinus = new JButton("-");
	private JButton jbtMultiply = new JButton("x");
	private JButton jbtDivide = new JButton("÷");
	
	private JButton jbtSin = new JButton("sin");
	private JButton jbtCos = new JButton("cos");
	private JButton jbtSec = new JButton("sec");
	private JButton jbtCsc = new JButton("csc");
	private JButton jbtTan = new JButton("tan");
	private JButton jbtCot = new JButton("cot");
	
	private JButton jbtLog = new JButton("log");
	private JButton jbtLn = new JButton("ln");
	private JButton jbtDel = new JButton("del");
	private JButton jbtPi = new JButton("π");
	
	private JButton jbtRemainder = new JButton("%");
	private JButton jbtQuotient = new JButton("/");
	
	private JButton[] Number = new JButton[10]; //for 0~9 button
	
	private JTextField jtActionDisplay = new JTextField();
	
	pulic TestCalculate(){
		JPanel p1 = new JPanel();
		p1.setLayout(new GridLayout(7,4));
		
		for(int i = 0; i <= 9; i++){
			Number[i] = new JButton(""+ i);
			p1.add(Number[i]);
		}
		
		p1.add(jbtDecimal);
		p1.add(jbtAnswer);
		p1.add(jbtAdd);
		p1.add(jbtMinus);
		p1.add(jbtMultiply);
		p1.add(jbtDivide);
		p1.add(jbtLog);
		p1.add(jbtLn);
		p1.add(jbtDel);
		p1.add(jbtPi);
		p1.add(jbtSin);
		p1.add(jbtCos);
		p1.add(jbtSec);
		p1.add(jbtCsc);
		p1.add(jbtTan);
		p1.add(jbtCot);
		
		JPanel p2 = new JPanel();
		p2.add(jtActionDisplay);
		
		add(p1, BorderLayout.CENTER);
		add(p2, BorderLayout.NORTH);
	}
	
	ButtonListener Action = new ButtonListener();
	
		for(int i = 0; i <= 9; i++)
			Number[i].addActionListener(Action);
			
		jbtDecimal.addActionListener(Action);
		jbtAnswer.addActionListener(Action);
		jbtAdd.addActionListener(Action);
		jbtMinus.addActionListener(Action);
		jbtMultiply.addActionListener(Action);
		jbtDivide.addActionListener(Action);
		jbtLog.addActionListener(Action);
		jbtLn.addActionListener(Action);
		jbtDel.addActionListener(Action);
		jbtPi.addActionListener(Action);
		jbtSin.addActionListener(Action);
		jbtCos.addActionListener(Action);
		jbtSec.addActionListener(Action);
		jbtCsc.addActionListener(Action);
		jbtTan.addActionListener(Action);
		jbtCot.addActionListener(Action);
	}
	
	private class ButtonListener implements ActionListener{
		@Override
		public void actionPerformed(ActionEvent e){
			switch(e.getSource()){
		
			case Number[0]: jtActionDisplay.setText(jtActionDisplay.getText() + "0"); break;
			case Number[1]: jtActionDisplay.setText(jtActionDisplay.getText() + "1"); break;
			case Number[2]: jtActionDisplay.setText(jtActionDisplay.getText() + "2"); break;
			case Number[3]: jtActionDisplay.setText(jtActionDisplay.getText() + "3"); break;
			case Number[4]: jtActionDisplay.setText(jtActionDisplay.getText() + "4"); break;
			case Number[5]: jtActionDisplay.setText(jtActionDisplay.getText() + "5"); break;
			case Number[6]: jtActionDisplay.setText(jtActionDisplay.getText() + "6"); break;
			case Number[7]: jtActionDisplay.setText(jtActionDisplay.getText() + "7"); break;
			case Number[8]: jtActionDisplay.setText(jtActionDisplay.getText() + "8"); break;
			case Number[9]: jtActionDisplay.setText(jtActionDisplay.getText() + "9"); break;
				
			case jbtDecimal: jtActionDisplay.setText(jtActionDisplay.getText() + "."); break;
			case jbtAnswer:
			
			case jbtAdd: jtActionDisplay.setText(jtActionDisplay.getText() + "+"); break;
			case jbtMinus: jtActionDisplay.setText(jtActionDisplay.getText() + "-"); break;
			case jbtMultiply: jtActionDisplay.setText(jtActionDisplay.getText() + "x"); break;
			case jbtDivide: jtActionDisplay.setText(jtActionDisplay.getText() + "÷"); break;
				
			case jbtLog: jtActionDisplay.setText("log" + jtActionDisplay.getText()); break;
			case jbtLn: jtActionDisplay.setText(jtActionDisplay.getText()); break;
			case jbtDel: jtActionDisplay.setText(""); break;
			case jbtPi: jtActionDisplay.setText(jtActionDisplay.getText() + "π"); break;
				
			case jbtSin: jtActionDisplay.setText("sin" + jtActionDisplay.getText() ); break;
			case jbtCos: jtActionDisplay.setText("cos" + jtActionDisplay.getText() ); break;
			case jbtSec: jtActionDisplay.setText("sec" + jtActionDisplay.getText() ); break;
			case jbtCsc: jtActionDisplay.setText("csc" + jtActionDisplay.getText() ); break;
			case jbtTan: jtActionDisplay.setText("tan" + jtActionDisplay.getText() ); break;
			case jbtCot:  jtActionDisplay.setText("cot" + jtActionDisplay.getText() ); break;
		}
	}
	
	public static void main( String[] args ){
		TestCalculate frame = new TestCalculate();
		frame.setSize(400,600);
		frame.setTitle(" 小算盤 ");
		frame.setLocationRelative(null);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setVisiable(true);
	}
	

	
	
}
